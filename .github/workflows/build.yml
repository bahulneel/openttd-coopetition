name: Build and Release

# Trigger workflow on push to main branch or manual trigger
on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version_override:
        description: 'Override version number (leave empty to use version.nut)'
        required: false
        type: string

# Define permissions needed for GitHub releases
permissions:
  contents: write
  packages: read

# Ensure only one workflow runs at a time
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    # Explicitly specify the runner version for better stability
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v5
      
      - name: Get version
        id: get_version
        run: |
          if [ -n "${{ github.event.inputs.version_override }}" ]; then
            echo "version=${{ github.event.inputs.version_override }}" >> $GITHUB_OUTPUT
            echo "Using manually provided version: ${{ github.event.inputs.version_override }}"
          else
            VERSION=$(grep -o 'COOPETITION_VERSION = [0-9]\+' version.nut | grep -o '[0-9]\+')
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Using version from version.nut: $VERSION"
          fi
      
      - name: Create dist directory
        run: mkdir -p dist
      
      - name: Package mod
        run: |
          zip -r "dist/coopetition-v${{ steps.get_version.outputs.version }}.zip" \
            *.nut \
            LICENSE \
            README.md
          
      - name: Validate zip file
        run: |
          echo "Validating zip file integrity..."
          if unzip -t "dist/coopetition-v${{ steps.get_version.outputs.version }}.zip"; then
            echo "✅ Zip file is valid"
          else
            echo "❌ Zip file validation failed"
            exit 1
          fi
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: coopetition-mod
          path: dist/*.zip
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Coopetition v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build Summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully built and released Coopetition v${{ steps.get_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "📦 Release URL: ${{ steps.create_release.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "📅 Released at: $(date)" >> $GITHUB_STEP_SUMMARY
          
  # Job to increment version and create PR back to develop
  increment-version:
    needs: build
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
      - name: Create branch for version increment
        run: |
          # Create a new branch for the version increment
          NEW_VERSION=$((${{ needs.build.outputs.version }} + 1))
          BRANCH_NAME="version-increment-${NEW_VERSION}"
          git checkout -b $BRANCH_NAME
          
      - name: Update version number
        run: |
          # Increment the version number in version.nut
          NEW_VERSION=$((${{ needs.build.outputs.version }} + 1))
          sed -i "s/COOPETITION_VERSION = ${{ needs.build.outputs.version }}/COOPETITION_VERSION = ${NEW_VERSION}/" version.nut
          
      - name: Commit changes
        run: |
          git add version.nut
          git commit -m "Increment version to v$((${{ needs.build.outputs.version }} + 1))"
          git push origin HEAD
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          base: develop
          title: "Increment version to v$((${{ needs.build.outputs.version }} + 1))"
          body: |
            This PR automatically increments the version number after release v${{ needs.build.outputs.version }}.
            
            ## Changes
            - Incremented version number from ${{ needs.build.outputs.version }} to $((${{ needs.build.outputs.version }} + 1))
          labels: version-bump, automated-pr
          branch: version-increment-$((${{ needs.build.outputs.version }} + 1))
          
      - name: PR Summary
        run: |
          echo "## Version Increment" >> $GITHUB_STEP_SUMMARY
          echo "✅ Created PR to increment version from ${{ needs.build.outputs.version }} to $((${{ needs.build.outputs.version }} + 1))" >> $GITHUB_STEP_SUMMARY